package demo.boot.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import demo.boot.model.Employee;

@RestController
public class ConsumeWebService {
   @Autowired
   RestTemplate restTemplate;

   @RequestMapping(value = "/template/employee")
   public List<Employee> getEmployees() {
      HttpHeaders headers = new HttpHeaders();
      headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
      HttpEntity<String> entity = new HttpEntity<String>(headers);
      
      ResponseEntity<List<Employee>> response = restTemplate.exchange("http:localhost:8080/employee", HttpMethod.GET,entity, 
      new ParameterizedTypeReference<List<Employee>>() {});
      return response.getBody();
          
   
   }
   
   @RequestMapping(value = "/template/employee", method = RequestMethod.POST)
   public String createProducts(@RequestBody Employee employee) {
      HttpHeaders headers = new HttpHeaders();
      headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
      HttpEntity<Employee> entity = new HttpEntity<Employee>(employee ,headers);
      
      return restTemplate.exchange(
         "http://localhost:8080/employee", HttpMethod.POST, entity, String.class).getBody();
   }
   
   
   @RequestMapping(value = "/template/employee/{id}", method = RequestMethod.PUT)
   public String updateProduct(@PathVariable("id") String id, @RequestBody Employee employee) {
      HttpHeaders headers = new HttpHeaders();
      headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
      HttpEntity<Employee> entity = new HttpEntity<Employee>(employee,headers);
      
      return restTemplate.exchange(
         "http://localhost:8080/employee/"+id, HttpMethod.PUT, entity, String.class).getBody();
   }
   
}
